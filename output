type_specifier -> INT
declaration_specifiers -> type_specifier
direct_declarator -> IDENTIFIER
direct_declarator -> direct_declarator ( )
declarator -> direct_declarator
type_specifier -> INT
declaration_specifiers -> type_specifier
direct_declarator -> IDENTIFIER
declarator -> direct_declarator
primary_expression -> CONSTANT
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
and_expression -> equality_expression
exclusive_or_expression -> and_expression
inclusive_or_expression -> exclusive_or_expression
logical_and_expression -> inclusive_or_expression
logical_or_expression -> logical_and_expression
conditional_expression -> logical_or_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
init_declarator -> declarator = initializer
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list ;
block_item -> declaration
block_item_list -> block_item
primary_expression -> IDENTIFIER
postfix_expression -> primary_expression
primary_expression -> STRING_LITERAL
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
and_expression -> equality_expression
exclusive_or_expression -> and_expression
inclusive_or_expression -> exclusive_or_expression
logical_and_expression -> inclusive_or_expression
logical_or_expression -> logical_and_expression
conditional_expression -> logical_or_expression
assignment_expression -> conditional_expression
argument_expression_list -> assignment_expression
postfix_expression -> postfix_expression ( argument_expression_list )
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
and_expression -> equality_expression
exclusive_or_expression -> and_expression
inclusive_or_expression -> exclusive_or_expression
logical_and_expression -> inclusive_or_expression
logical_or_expression -> logical_and_expression
conditional_expression -> logical_or_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
expression_statement -> expression ;
statement -> expression_statement
block_item -> statement
block_item_list -> block_item_list block_item
primary_expression -> IDENTIFIER
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
primary_expression -> CONSTANT
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> equality_expression EQ_OP relational_expression
and_expression -> equality_expression
exclusive_or_expression -> and_expression
inclusive_or_expression -> exclusive_or_expression
logical_and_expression -> inclusive_or_expression
logical_or_expression -> logical_and_expression
conditional_expression -> logical_or_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
primary_expression -> IDENTIFIER
postfix_expression -> primary_expression
postfix_expression -> postfix_expression INC_OP
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
and_expression -> equality_expression
exclusive_or_expression -> and_expression
inclusive_or_expression -> exclusive_or_expression
logical_and_expression -> inclusive_or_expression
logical_or_expression -> logical_and_expression
conditional_expression -> logical_or_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
expression_statement -> expression ;
statement -> expression_statement
block_item -> statement
block_item_list -> block_item
compound_statement -> { block_item_list }
statement -> compound_statement
selection_statement -> IF ( expression ) statement
statement -> selection_statement
block_item -> statement
block_item_list -> block_item_list block_item
compound_statement -> { block_item_list }
function_definition -> declaration_specifiers declarator compound_statement
external_declaration -> function_definition
translation_unit -> external_declaration